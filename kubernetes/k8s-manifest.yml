# ---
# 1. Deployment para o Banco de Dados (db)
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres-db
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: POSTGRES_DB
          volumeMounts:
            - name: db-script-volume
              mountPath: /docker-entrypoint-initdb.d/ # <--- O caminho correto para inicialização
            - name: postgres-db-volume
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
      volumes:
        - name: db-script-volume
          configMap:
            name: db-init-script
        - name: postgres-db-volume
          persistentVolumeClaim:
            claimName: postgres-db-pvc
---
# 2. Service para o Banco de Dados (db-service)
# ---
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: postgres-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
# 3. Deployment para a sua Aplicação (api)
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: spring-app
          image: order:latest # Usa a imagem que você construiu
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            # A url do banco de dados usa o NOME DO SERVIÇO do K8s
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: POSTGRES_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: SPRING_DATASOURCE_PASSWORD
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"


---
# 4. Service para a sua Aplicação (api)
# ---
apiVersion: v1
kind: Service
metadata:
  name: spring-app-service
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 80 # A porta externa que você vai acessar (localhost:8080)
      targetPort: 8080 # A porta interna do container
      nodePort: 30001
  type: NodePort # Ou NodePort, para testes locais